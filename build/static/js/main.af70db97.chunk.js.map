{"version":3,"sources":["serviceWorker.js","service/user.service.js","components/authenticated-route/index.js","config/env.js","components/map/index.js","views/stats/index.js","api/user.js","api/location.js","service/helper.js","components/thread/index.js","components/thread-list/index.js","components/page-head/index.js","components/search-bar/index.js","views/feed/index.js","api/thread.js","components/post/index.js","components/post-list/index.js","components/new-post/index.js","views/thread/index.js","views/not-found/index.js","views/new-thread/index.js","components/sign-in/index.js","components/sign-up/index.js","views/authenticate/index.js","components/header/index.js","index.js"],"names":["Boolean","window","location","hostname","match","currentUser","withRouter","Component","component","rest","render","props","id","to","pathname","state","from","environment","api","am4core","am4themes_animated","Map","chart","useRef","series","useLayoutEffect","map","am4maps","geodata","am4geodata_worldLow","projection","Miller","polygonSeries","push","useGeodata","exclude","imageSeries","imageSeriesTemplate","mapImages","template","circle","createChild","radius","fill","stroke","strokeWidth","nonScaling","propertyFields","latitude","longitude","data","current","dispose","locations","className","Stats","useState","stats","setStats","setLocations","dataAvailable","setDataAvailable","useEffect","a","promiseArray","axios","get","env","Promise","all","forEach","response","Array","isArray","console","error","getData","userCount","threadCount","postCount","type","color","height","width","convertDateToFromNow","date","moment","fromNow","getRandomBackgroundColor","str","saturation","hash","i","length","_charCode","charCodeAt","backgroundColor","Thread","setDate","setColor","thread","created","user","name","htmlContent","style","substring","subject","tags","tag","index","key","post","content","count","clickable","threadId","ThreadList","listItems","threads","Fragment","PageHead","title","SearchBar","alt","placeholder","value","onChange","event","onSearch","target","onClick","search","Feed","setThreads","searchDone","setSearchDone","searchThreads","setSearchThreads","searchTerm","setSearchTerm","then","catch","err","term","searchAllThreads","Post","dateUser","setDateUser","format","convertDate","PostList","posts","message","setMessage","undefined","setError","setThreadId","setLocation","needToLogin","setNeedToLogin","htmlFor","navigator","geolocation","getCurrentPosition","position","lat","coords","long","payload","userId","addPost","JSON","stringify","status","active","success","setId","redirectToHome","setRedirectToHome","threadLoaded","setThreadLoaded","setThread","setPosts","params","getThread","temp","document","getElementById","scrollIntoView","NotFound","setSubject","setTags","redirect","setRedirect","autoFocus","addThread","Login","username","setUsername","password","setPassword","changeMode","pass","sha256","toString","signInUser","email","Register","setEmail","signUpUser","hashed_password","login","setLogin","redirectToReferrer","setRedirectToReferrer","loginSuccess","Object","assign","changeLoginMode","ReactDOM","StrictMode","exact","path","NewThread","Authenticate","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af70db97.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","// Should have the following properties\n/*\n    this.id \n    this.name\n    this.created\n    this.updated\n    this.email\n    this.active\n*/\n\nconst addUser = (user) => {\n  Object.assign(currentUser, user);\n};\n\nconst currentUser = {};\n\nexport { currentUser, addUser };\n","// React router AuthenticatedRoute\n// https://stackoverflow.com/questions/48954262/react-router-force-to-another-page-if-a-variable-doesnt-exist\n\nimport React from \"react\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport { currentUser } from \"../../service/user.service\";\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      currentUser.id ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withRouter(AuthenticatedRoute);\n","const environment = {};\n\nenvironment[\"development\"] = {\n  api: \"http://localhost:3000\",\n};\n\nenvironment[\"production\"] = {\n  api: \"https://webdev-forum-backend.herokuapp.com\",\n};\n\nexport default environment;\n","import React, { useRef, useLayoutEffect } from \"react\";\nimport \"./map.css\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\n\nam4core.useTheme(am4themes_animated);\n\nconst Map = (props) => {\n  const chart = useRef(null);\n  const series = useRef(null);\n\n  useLayoutEffect(() => {\n    let map = am4core.create(\"posts-map\", am4maps.MapChart);\n    map.geodata = am4geodata_worldLow;\n    map.projection = new am4maps.projections.Miller();\n\n    // Create map polygon series\n    var polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n    polygonSeries.useGeodata = true;\n    // Remove Antarctica\n    polygonSeries.exclude = [\"AQ\"];\n\n    let imageSeries = map.series.push(new am4maps.MapImageSeries());\n    let imageSeriesTemplate = imageSeries.mapImages.template;\n    let circle = imageSeriesTemplate.createChild(am4core.Circle);\n    circle.radius = 2;\n    circle.fill = am4core.color(\"#4f5d75\");\n    circle.stroke = am4core.color(\"#4f5d75\");\n    circle.strokeWidth = 1;\n    circle.nonScaling = true;\n\n    // Set property fields\n    imageSeriesTemplate.propertyFields.latitude = \"lat\";\n    imageSeriesTemplate.propertyFields.longitude = \"long\";\n\n    // Add data for the three cities\n    imageSeries.data = [];\n\n    chart.current = map;\n    series.current = imageSeries;\n\n    return () => {\n      map.dispose();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (series && series.current) {\n      series.current.data = props.locations;\n    }\n  }, [props.locations]);\n\n  return <div id=\"posts-map\" className=\"posts-map\"></div>;\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport \"./stats.css\";\nimport Loader from \"react-loader-spinner\";\nimport { getUserStats } from \"../../api/user\";\nimport { getLocations } from \"../../api/location\";\nimport Map from \"../../components/map\";\n\nconst Stats = (props) => {\n  const [stats, setStats] = useState({});\n  const [locations, setLocations] = useState([]);\n  const [dataAvailable, setDataAvailable] = useState(false);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const promiseArray = [getUserStats(), getLocations()];\n        const data = await Promise.all(promiseArray);\n\n        // go over all requests\n        data.forEach((response) => {\n          if (response && response.data) {\n            if (Array.isArray(response.data)) {\n              // locations\n              setLocations(response.data);\n            } else {\n              setStats(response.data);\n            }\n          }\n          // Let UI know that the users are available\n          setDataAvailable(true);\n        });\n      } catch (error) {\n        console.error(\"Failed to get user stats\");\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <div className=\"stats\">\n      <h1>Forum stats:</h1>\n      <div className=\"container\">\n        {\n          // Show loader until we load the user list\n          dataAvailable ? (\n            <div className=\"data\">\n              <ul>\n                <li>Users: {stats.userCount}</li>\n                <li>Threads: {stats.threadCount}</li>\n                <li>Posts: {stats.postCount}</li>\n              </ul>\n              <Map locations={locations} />\n            </div>\n          ) : (\n            <Loader\n              type=\"Puff\"\n              color=\"#4f5d75\"\n              height={100}\n              width={100}\n              className=\"loader\"\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Stats;\n","import axios from \"axios\";\nimport env from \"../config/env\";\n\n// Api call to get all users from the database\n// mostly used for debugging and admin purposes\n// Get env api -> production: deployed database\n// development -> localhost database\nexport const getUserStats = () => {\n  return axios.get(env[process.env.NODE_ENV].api + \"/accounts/stats\");\n};\n\nexport const signInUser = (payload) => {\n  return axios.post(\n    env[process.env.NODE_ENV].api + \"/accounts/signin\",\n    payload\n  );\n};\n\nexport const signUpUser = (payload) => {\n  return axios.post(\n    env[process.env.NODE_ENV].api + \"/accounts/signup\",\n    payload\n  );\n};\n","import axios from \"axios\";\nimport env from \"../config/env\";\n\nexport const getLocations = () => {\n  return axios.get(env[process.env.NODE_ENV].api + \"/location/all\");\n};\n","import * as moment from \"moment\";\n\nexport const convertDateToFromNow = (date) => {\n  return moment(date).fromNow();\n};\n\nexport const convertDate = (date) => {\n  return moment(date).format(\"MMMM Do YYYY, h:mm:ss a\");\n};\n\nexport const getRandomBackgroundColor = (str) => {\n  var saturation = 0;\n  var hash = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    const _charCode = str.charCodeAt(i);\n    saturation = (saturation + _charCode) % 100;\n    hash = _charCode + ((hash << 5) - hash);\n  }\n\n  var l = (saturation * saturation) % 100;\n\n  var h = hash % 360;\n\n  const style = {\n    backgroundColor: \"hsl(\" + h + \", \" + saturation + \"%, \" + l + \"%)\",\n  };\n  return style;\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./thread.css\";\nimport { Link } from \"react-router-dom\";\nimport {\n  convertDateToFromNow,\n  getRandomBackgroundColor,\n} from \"../../service/helper\";\n\nconst Thread = (props) => {\n  const [date, setDate] = useState(\"\");\n  const [color, setColor] = useState({});\n\n  const initialSetup = () => {\n    setDate(convertDateToFromNow(props.thread.created));\n    setColor(getRandomBackgroundColor(props.thread.user.name));\n  };\n\n  useEffect(initialSetup, []);\n\n  const htmlContent = (\n    <div className=\"container\">\n      <div className=\"vertical-centering icon\">\n        <div style={color}>{props.thread.user.name.substring(0, 2)}</div>\n      </div>\n      <div className=\"content\">\n        <div className=\"subject\">\n          <h3>{props.thread.subject}</h3>\n        </div>\n        <div className=\"date\">\n          Created by {props.thread.user.name} {date}\n        </div>\n        <div className=\"tags\">\n          Tags:{\" \"}\n          {props.thread.tags &&\n          props.thread.tags.length &&\n          Array.isArray(props.thread.tags)\n            ? props.thread.tags.map((tag, index) => (\n                <span key={index}>{tag}</span>\n              ))\n            : \"\"}\n        </div>\n        <div className=\"message\">\n          <p>{props.thread.post.content}</p>\n        </div>\n      </div>\n      <div className=\"comments vertical-centering\">\n        <p>{props.thread.count - 1} comments</p>\n      </div>\n    </div>\n  );\n\n  if (props.clickable) {\n    return (\n      <Link\n        className=\"thread\"\n        to={{\n          pathname: \"/thread/\" + props.thread.id,\n          state: { threadId: props.thread.id },\n        }}\n      >\n        {htmlContent}\n      </Link>\n    );\n  } else {\n    return <div className=\"thread\">{htmlContent}</div>;\n  }\n};\n\nexport default Thread;\n","import React from \"react\";\nimport Thread from \"../thread\";\n\nfunction ThreadList(props) {\n  const threads = props.threads;\n  const listItems = threads.map((thread) => (\n    <Thread clickable={true} key={thread.id} thread={thread} />\n  ));\n  return <React.Fragment>{listItems}</React.Fragment>;\n}\n\nexport default ThreadList;\n","import React from \"react\";\n\nfunction PageHead(props) {\n  return (\n    <div className=\"page-head\">\n      <h1>{props.title}</h1>\n    </div>\n  );\n}\n\nexport default PageHead;\n","import React from \"react\";\nimport \"./search-bar.css\";\n\nconst SearchBar = (props) => {\n  return (\n    <div className=\"search-bar\">\n      <input\n        id=\"search\"\n        alt=\"search\"\n        name=\"search\"\n        placeholder=\"Search for thread\"\n        type=\"text\"\n        value={props.value}\n        onChange={(event) => props.onSearch(event.target.value)}\n      ></input>\n      <button onClick={props.search}>Search</button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState } from \"react\";\nimport \"./feed.css\";\nimport { getAllThreads, searchAllThreads } from \"../../api/thread\";\nimport ThreadList from \"../../components/thread-list\";\nimport Loader from \"react-loader-spinner\";\nimport PageHead from \"../../components/page-head\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../../components/search-bar\";\n\nconst Feed = (props) => {\n  const [threads, setThreads] = useState([]);\n  const [dataAvailable, setDataAvailable] = useState(false);\n  const [searchDone, setSearchDone] = useState(false);\n  const [searchThreads, setSearchThreads] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const triggerSearch = () => {\n    if (searchTerm !== \"\") {\n      onSearch(searchTerm);\n    }\n  };\n\n  useEffect(() => {\n    getAllThreads()\n      .then((response) => {\n        // Insert users\n        setThreads(response.data);\n\n        // Let UI know that the users are available\n        setDataAvailable(true);\n      })\n      .catch((err) => {\n        // TODO: Show error message\n        console.error(\"Failed to get all threads\", err);\n      });\n  }, []);\n\n  const onSearch = (term) => {\n    setDataAvailable(false);\n    searchAllThreads(term)\n      .then((response) => {\n        // Insert users\n        setSearchThreads(response.data);\n\n        // Let UI know that the users are available\n        setDataAvailable(true);\n        setSearchDone(true);\n      })\n      .catch((err) => {\n        // TODO: Show error message\n        console.error(\"Failed to get all threads\", err);\n      });\n  };\n\n  const resetSearch = () => {\n    setSearchTerm(\"\");\n    setSearchThreads([]);\n    setSearchDone(false);\n  };\n\n  return (\n    <div className=\"feed\">\n      <PageHead className=\"title\" title=\"Home\" />\n\n      <div className=\"container\">\n        {\n          // Show loader until we load the user list\n          dataAvailable ? (\n            <ThreadList\n              threads={searchThreads.length > 0 ? searchThreads : threads}\n            />\n          ) : (\n            <Loader\n              type=\"Puff\"\n              color=\"#4f5d75\"\n              height={100}\n              width={100}\n              className=\"loader\"\n            />\n          )\n        }\n      </div>\n\n      <aside>\n        <Link to=\"/thread/new_thread\">\n          <div className=\"create-new-thread\">Create new thread</div>\n        </Link>\n        <SearchBar\n          value={searchTerm}\n          search={triggerSearch}\n          onSearch={setSearchTerm}\n        />\n        {searchDone ? (\n          <div onClick={resetSearch} className=\"search-info\">\n            {searchThreads.length > 0 ? \"Reset search\" : \"No threads found\"}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </aside>\n    </div>\n  );\n};\n\nexport default Feed;\n","import axios from \"axios\";\nimport env from \"../config/env\";\nimport { currentUser } from \"../service/user.service\";\n\nexport const getAllThreads = () => {\n  return axios.get(env[process.env.NODE_ENV].api + \"/thread/all\");\n};\n\nexport const searchAllThreads = (searchTerm) => {\n  return axios.get(\n    env[process.env.NODE_ENV].api + \"/thread/search?searchTerm=\" + searchTerm\n  );\n};\n\nexport const getThread = (id) => {\n  return axios.get(env[process.env.NODE_ENV].api + \"/thread/one?id=\" + id);\n};\n\nexport const addThread = (payload) => {\n  payload.userId = currentUser.id;\n  return axios.post(env[process.env.NODE_ENV].api + \"/thread/add\", payload);\n};\n\nexport const addPost = (payload) => {\n  payload.userId = currentUser.id;\n  return axios.post(\n    env[process.env.NODE_ENV].api + \"/thread/add-post\",\n    payload\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./post.css\";\nimport {\n  convertDate,\n  getRandomBackgroundColor,\n  convertDateToFromNow,\n} from \"../../service/helper\";\n\nconst Post = (props) => {\n  const [date, setDate] = useState(\"\");\n  const [dateUser, setDateUser] = useState(\"\");\n  const [color, setColor] = useState({});\n\n  const initialSetup = () => {\n    setDate(convertDate(props.post.created));\n    setColor(\n      getRandomBackgroundColor(\n        props.post.user[0] ? props.post.user[0].name : \"unknown\"\n      )\n    );\n    setDateUser(\n      props.post.user[0]\n        ? convertDateToFromNow(props.post.user[0].created)\n        : \"unknown\"\n    );\n  };\n\n  useEffect(initialSetup, []);\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"header\">{date}</div>\n      <div className=\"content\">\n        <div className=\"left\">\n          <div className=\"icon\" style={color}>\n            {(props.post.user[0]\n              ? props.post.user[0].name\n              : \"unknown\"\n            ).substring(0, 2)}\n          </div>\n          <p>{props.post.user[0] ? props.post.user[0].name : \"unknown\"}</p>\n          <p className=\"date\">Joined: {dateUser}</p>\n        </div>\n        <div className=\"right\">{props.post.content}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"../post\";\n\nfunction PostList(props) {\n  const posts = props.posts;\n  const listItems = posts.map((post, index) => (\n    <Post key={index} post={post} />\n  ));\n  return <div className=\"post-list\">{listItems}</div>;\n}\n\nexport default PostList;\n","import React, { useState, useEffect } from \"react\";\nimport { addPost } from \"../../api/thread\";\nimport { currentUser } from \"../../service/user.service\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport \"./new-post.css\";\n\nconst NewPost = (props) => {\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(undefined);\n  const [threadId, setThreadId] = useState(undefined);\n  const [location, setLocation] = useState(undefined);\n  const [needToLogin, setNeedToLogin] = useState(false);\n\n  const initialSetup = () => {\n    setThreadId(props.threadId);\n    if (!currentUser.id) {\n      setNeedToLogin(true);\n    }\n  };\n\n  useEffect(initialSetup, []);\n\n  const handleClick = () => {\n    var payload = {\n      threadId: threadId,\n      message: message,\n      location: JSON.stringify(location),\n    };\n\n    addPost(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          // link to thread page\n          const data = response.data;\n          // convert to post object\n          const post = {\n            active: data.active,\n            content: data.content,\n            created: data.created,\n            user: [\n              {\n                name: currentUser.name,\n                id: currentUser.id,\n              },\n            ],\n          };\n          props.success(post);\n\n          // clear data\n          setMessage(\"\");\n          setLocation(undefined);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const askLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLocation({\n          lat: position.coords.latitude,\n          long: position.coords.longitude,\n        });\n      });\n    } else {\n      setError(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  if (needToLogin) {\n    return (\n      <div id={props.id} className=\"new-post\">\n        Please sign-in/sign-up to add a post.\n        <Link\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        >\n          <p className=\"button\">Go to sign-in/sign-up</p>\n        </Link>\n      </div>\n    );\n  } else {\n    return (\n      <div id={props.id} className=\"new-post\">\n        <h1>Add post:</h1>\n\n        <textarea\n          id=\"message\"\n          alt=\"message\"\n          name=\"message\"\n          onChange={(event) => setMessage(event.target.value)}\n        ></textarea>\n        <div className=\"location\">\n          <label htmlFor=\"location\">Share location: </label>\n          <input onChange={askLocation} type=\"checkbox\"></input>\n        </div>\n        <button onClick={handleClick}>Submit</button>\n        <div>{error ? error : \"\"}</div>\n      </div>\n    );\n  }\n};\n\nexport default withRouter(NewPost);\n","import React, { useState, useEffect } from \"react\";\nimport \"./thread.css\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { getThread } from \"../../api/thread\";\nimport Loader from \"react-loader-spinner\";\nimport PostList from \"../../components/post-list\";\nimport NewPost from \"../../components/new-post\";\nimport Thread from \"../../components/thread\";\nconst ThreadPage = (props) => {\n  // declare states\n  const [id, setId] = useState(undefined);\n  const [redirectToHome, setRedirectToHome] = useState(false);\n  const [threadLoaded, setThreadLoaded] = useState(false);\n  const [thread, setThread] = useState({});\n  const [posts, setPosts] = useState({});\n\n  // Get thread here\n  const initialSetup = () => {\n    if (\n      props.location &&\n      props.location.state &&\n      props.location.state.threadId\n    ) {\n      setId(props.location.state.threadId);\n    } else if (props.match && props.match.params && props.match.params.thread) {\n      setId(props.match.params.thread);\n    } else {\n      setRedirectToHome(true);\n    }\n  };\n\n  useEffect(initialSetup, []);\n\n  useEffect(() => {\n    const getPosts = () => {\n      getThread(id)\n        .then((response) => {\n          if (response.status === 200) {\n            if (\n              response.data &&\n              response.data.length &&\n              response.data.length > 0\n            ) {\n              const temp = response.data[0];\n              temp.post = response.data[0].posts[0];\n              temp.count = response.data[0].posts.length;\n\n              setThread(temp);\n              setPosts(response.data[0].posts);\n              setThreadLoaded(true);\n            }\n          } else if (response.status === 202) {\n            console.error(\"error\", response.data);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    };\n    if (id) {\n      getPosts();\n    }\n  }, [id]);\n\n  const addPostToList = (post) => {\n    setPosts(() => [...posts, post]);\n  };\n\n  const scrollToNewPost = () => {\n    const newPost = document.getElementById(\"new-post\");\n    newPost.scrollIntoView(true);\n  };\n\n  if (redirectToHome === true) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"thread\">\n      {\n        // Show loader until we load the user list\n        threadLoaded ? (\n          // posts here\n          <div>\n            <Thread clickable={false} thread={thread} />\n\n            <div className=\"content\">\n              <PostList posts={posts} />\n              <aside>\n                <div onClick={scrollToNewPost}>\n                  <div className=\"create-new-post\">Create new post</div>\n                </div>\n              </aside>\n            </div>\n\n            <br />\n            <NewPost\n              id=\"new-post\"\n              success={addPostToList}\n              threadId={thread.id}\n            />\n          </div>\n        ) : (\n          <Loader\n            type=\"Puff\"\n            color=\"#4f5d75;\"\n            height={100}\n            width={100}\n            className=\"loader\"\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default withRouter(ThreadPage);\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h3>Url not found.</h3>;\n};\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport \"./new-thread.css\";\nimport { addThread } from \"../../api/thread\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport TagsInput from \"react-tagsinput\";\n\nconst NewThread = (props) => {\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [threadId, setThreadId] = useState(undefined);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleClick = () => {\n    if (subject === \"\" || message === \"\") {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    var payload = {\n      subject: subject,\n      message: message,\n      tags: JSON.stringify(tags),\n    };\n\n    addThread(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          // link to thread page\n          setThreadId(response.data.id);\n          setRedirect(true);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (redirect === true) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/thread/\" + threadId,\n          state: { threadId: threadId },\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"new-thread\">\n      <h1>Add a thread</h1>\n\n      <div>\n        <label htmlFor=\"subject\">Subject: </label>\n        <input\n          id=\"subject\"\n          alt=\"subject\"\n          autoFocus\n          name=\"subject\"\n          placeholder=\"Enter thread subject\"\n          type=\"text\"\n          onChange={(event) => setSubject(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"message\">Message: </label>\n        <textarea\n          id=\"message\"\n          alt=\"message\"\n          name=\"message\"\n          onChange={(event) => setMessage(event.target.value)}\n        ></textarea>\n      </div>\n      <div>\n        <label htmlFor=\"tags\">Tags: </label>\n        <TagsInput id=\"tags\" value={tags} onChange={setTags} />\n      </div>\n\n      <button onClick={handleClick}>Submit</button>\n\n      <div className=\"error\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default withRouter(NewThread);\n","import React, { useState } from \"react\";\nimport { signInUser } from \"../../api/user\";\nimport sha256 from \"crypto-js/sha256\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(undefined);\n\n  const handlePassword = (pass) => setPassword(sha256(pass).toString());\n\n  const handleClick = () => {\n    if (username === \"\" || password === \"\") {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    var payload = {\n      email: username,\n      password: password,\n    };\n\n    signInUser(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          props.success(response.data);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div onClick={props.changeMode} className=\"top-right-corner\">\n        Sign-up\n      </div>\n      <h2>Sign-in</h2>\n\n      <div>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          id=\"email\"\n          alt=\"email\"\n          autoFocus\n          name=\"username\"\n          placeholder=\"Enter your Email\"\n          type=\"text\"\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          id=\"password\"\n          alt=\"password\"\n          name=\"password\"\n          placeholder=\"Enter your Password\"\n          type=\"password\"\n          onChange={(event) => handlePassword(event.target.value)}\n        ></input>\n      </div>\n\n      <button onClick={handleClick}>Sign-in</button>\n\n      <div className=\"error\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { signUpUser } from \"../../api/user\";\nimport sha256 from \"crypto-js/sha256\";\n\nconst Register = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(undefined);\n\n  const handleClick = () => {\n    if (username === \"\" || password === \"\" || email === \"\") {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    // TODO: validate values\n    var payload = {\n      name: username,\n      email: email,\n      hashed_password: password,\n    };\n\n    signUpUser(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          props.success(response.data);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handlePassword = (pass) => setPassword(sha256(pass).toString());\n\n  return (\n    <div className=\"container\">\n      <div onClick={props.changeMode} className=\"top-right-corner\">\n        Sign-in\n      </div>\n      <h2>Sign-up</h2>\n\n      <div>\n        <label htmlFor=\"name\">Username: </label>\n        <input\n          id=\"name\"\n          alt=\"name\"\n          autoFocus\n          name=\"name\"\n          placeholder=\"Enter your username\"\n          type=\"text\"\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          id=\"email\"\n          alt=\"email\"\n          name=\"username\"\n          placeholder=\"Enter your Email\"\n          type=\"text\"\n          onChange={(event) => setEmail(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          id=\"password\"\n          alt=\"password\"\n          name=\"password\"\n          placeholder=\"Enter your Password\"\n          type=\"password\"\n          onChange={(event) => handlePassword(event.target.value)}\n        ></input>\n      </div>\n\n      <button onClick={handleClick}>Sign-up</button>\n\n      <div className=\"error\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport \"./authenticate.css\";\nimport { addUser } from \"../../service/user.service\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport SignIn from \"../../components/sign-in\";\nimport SignUp from \"../../components/sign-up\";\n\nconst Authenticate = (props) => {\n  const [login, setLogin] = useState(true);\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n  const loginSuccess = (data) => {\n    addUser(data);\n    setRedirectToReferrer(true);\n  };\n\n  const changeLoginMode = () => {\n    setLogin(!login);\n  };\n\n  if (redirectToReferrer === true) {\n    return <Redirect to={from} />;\n  }\n\n  return (\n    <div className=\"auth-container\">\n      {login ? (\n        <SignIn changeMode={changeLoginMode} success={loginSuccess} />\n      ) : (\n        <SignUp changeMode={changeLoginMode} success={loginSuccess} />\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(Authenticate);\n","import React from \"react\";\nimport \"./header.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { currentUser } from \"../../service/user.service\";\n\n// Change the page in router to the correct querystring\n// uses react-router linking\n// we can restyle this to be in a nav bar\n\nconst Header = (props) => {\n  return (\n    <header className=\"active\" id=\"scroll-header\">\n      <nav>\n        <div className=\"menu\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/thread/new_thread\">New thread</Link>\n          <Link to=\"/stats\">Stats</Link>\n        </div>\n        <div className=\"filler\"></div>\n        <div className=\"login\">\n          {currentUser.id ? (\n            <div>hello {currentUser.name}</div>\n          ) : (\n            <Link\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location },\n              }}\n            >\n              Sign-In/Sign-up\n            </Link>\n          )}\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Switch, Route, HashRouter as Router } from \"react-router-dom\";\n\n// Route\nimport AuthenticatedRoute from \"./components/authenticated-route\";\n\n// Pages\nimport Stats from \"./views/stats\";\nimport Feed from \"./views/feed\";\nimport Thread from \"./views/thread\";\nimport NotFound from \"./views/not-found\";\nimport NewThread from \"./views/new-thread\";\nimport Authenticate from \"./views/authenticate\";\n\n// Components\nimport Header from \"./components/header\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router >\n      <Header />\n      <div className=\"forum-body\">\n        <Switch>\n          <Route exact path=\"/\" component={Feed} />\n          <Route path=\"/stats\" component={Stats} />\n          <AuthenticatedRoute path=\"/thread/new_thread\" component={NewThread} />\n          <Route path=\"/thread/:thread\" component={Thread} />\n          <Route path=\"/login\" component={Authenticate} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </div>\n      <footer>\n        <div className=\"copyright\">\n          Copyright © 2020, David Pan and Emile Ferrand\n        </div>\n      </footer>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}