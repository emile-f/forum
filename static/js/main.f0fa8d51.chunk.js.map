{"version":3,"sources":["serviceWorker.js","service/cookie.service.js","service/user.service.js","components/authenticated-route/index.js","config/env.js","components/map/index.js","views/stats/index.js","api/user.js","api/location.js","service/helper.js","components/thread/index.js","components/thread-list/index.js","components/page-head/index.js","components/search-bar/index.js","views/feed/index.js","api/thread.js","components/post/index.js","components/post-list/index.js","components/new-post/index.js","views/thread/index.js","views/not-found/index.js","views/new-thread/index.js","components/sign-in/index.js","components/sign-up/index.js","views/authenticate/index.js","components/header/index.js","components/footer/index.js","index.js"],"names":["Boolean","window","location","hostname","match","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","addUser","user","Object","assign","currentUser","JSON","stringify","signOut","reload","initialLoad","withRouter","Component","component","rest","render","props","id","to","pathname","state","from","environment","api","am4core","am4themes_animated","Map","chart","useRef","series","useLayoutEffect","map","am4maps","geodata","am4geodata_worldLow","projection","Miller","polygonSeries","push","useGeodata","exclude","imageSeries","imageSeriesTemplate","mapImages","template","circle","createChild","radius","fill","stroke","strokeWidth","nonScaling","propertyFields","latitude","longitude","data","current","dispose","locations","className","Stats","useState","stats","setStats","setLocations","dataAvailable","setDataAvailable","useEffect","a","promiseArray","axios","get","env","Promise","all","forEach","response","Array","isArray","console","error","getData","userCount","threadCount","postCount","type","color","height","width","Color","require","convertDateToFromNow","date","moment","fromNow","Thread","setDate","thread","created","htmlContent","subject","name","tags","length","tag","index","key","count","clickable","threadId","ThreadList","listItems","threads","Fragment","PageHead","title","SearchBar","inputRef","SearchButtonRef","triggerEvent","event","keyCode","preventDefault","click","addEventListener","removeEventListener","ref","alt","placeholder","aria-label","value","onChange","onSearch","target","onClick","search","Feed","setThreads","searchThreads","setSearchThreads","visibleThreads","setVisibleThreads","searchDone","setSearchDone","searchTerm","setSearchTerm","currentPage","setCurrentPage","offset","handlePageClick","selectedPage","selected","currentPageData","slice","then","catch","err","term","searchAllThreads","previousLabel","nextLabel","pageCount","Math","ceil","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Post","dateUser","setDateUser","setColor","format","convertDate","post","str","saturation","hash","i","_charCode","charCodeAt","backgroundColor","rgb","isDark","getRandomBackgroundColor","style","substring","content","PostList","posts","message","setMessage","undefined","setError","setThreadId","setLocation","needToLogin","setNeedToLogin","htmlFor","navigator","geolocation","getCurrentPosition","position","lat","coords","long","payload","userId","addPost","status","active","success","setId","redirectToHome","setRedirectToHome","threadLoaded","setThreadLoaded","setThread","setPosts","visiblePosts","setVisiblePosts","params","getThread","temp","getElementById","scrollIntoView","NotFound","setSubject","setTags","redirect","setRedirect","inputProps","addThread","Login","username","setUsername","password","setPassword","changeMode","autoFocus","pass","sha256","toString","signInUser","email","Register","setEmail","signUpUser","hashed_password","login","setLogin","redirectToReferrer","setRedirectToReferrer","loginSuccess","changeLoginMode","role","Footer","windowHeight","setWindowHeight","forumHeight","setForumHeight","setClassName","innerHeight","observer","ResizeObserver","entries","cr","contentRect","top","forumBody","observe","ca","decodeURIComponent","split","c","charAt","indexOf","getCookie","parse","log","getUser","ReactDOM","StrictMode","exact","path","NewThread","Authenticate","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0fa8d51.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const setCookie = (cname, cvalue, exdays) => {\n  var d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  var expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n};\n\nconst getCookie = (cname) => {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n};\n\nconst deleteCookie = (cname) => {\n  setCookie(cname, null, -1);\n};\n\nexport { setCookie, getCookie, deleteCookie };\n","import { deleteCookie, getCookie, setCookie } from \"./cookie.service\";\nconst COOKIE_NAME = \"forum-user\";\n// Should have the following properties\n/*\n    this.id \n    this.name\n    this.created\n    this.updated\n    this.email\n    this.active\n*/\n\nconst addUser = (user) => {\n  Object.assign(currentUser, user);\n  setCookie(COOKIE_NAME, JSON.stringify(currentUser), 1);\n};\n\nconst getUser = () => {\n  if (!initialLoad) {\n    let cookie = getCookie(COOKIE_NAME);\n    if (cookie) {\n      try {\n        cookie = JSON.parse(cookie);\n      } catch (error) {\n        console.log(\"Failed to load cached user\");\n      }\n      addUser(cookie);\n    }\n    initialLoad = true;\n  }\n  return currentUser;\n};\n\nconst signOut = () => {\n  Object.assign(currentUser);\n  deleteCookie(COOKIE_NAME);\n  window.location.reload();\n};\n\nlet initialLoad = false;\nconst currentUser = {};\n\nexport { currentUser, addUser, getUser, signOut };\n","// React router AuthenticatedRoute\n// https://stackoverflow.com/questions/48954262/react-router-force-to-another-page-if-a-variable-doesnt-exist\n\nimport React from \"react\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport { currentUser } from \"../../service/user.service\";\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      currentUser.id ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default withRouter(AuthenticatedRoute);\n","const environment = {};\n\nenvironment[\"development\"] = {\n  api: \"https://webdev-forum-backend.herokuapp.com\",\n};\n\nenvironment[\"production\"] = {\n  api: \"https://webdev-forum-backend.herokuapp.com\",\n};\n\nexport default environment;\n","import React, { useRef, useLayoutEffect } from \"react\";\nimport \"./map.css\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\n\nam4core.useTheme(am4themes_animated);\n\nconst Map = (props) => {\n  const chart = useRef(null);\n  const series = useRef(null);\n\n  useLayoutEffect(() => {\n    let map = am4core.create(\"posts-map\", am4maps.MapChart);\n    map.geodata = am4geodata_worldLow;\n    map.projection = new am4maps.projections.Miller();\n\n    // Create map polygon series\n    var polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n    polygonSeries.useGeodata = true;\n    // Remove Antarctica\n    polygonSeries.exclude = [\"AQ\"];\n\n    let imageSeries = map.series.push(new am4maps.MapImageSeries());\n    let imageSeriesTemplate = imageSeries.mapImages.template;\n    let circle = imageSeriesTemplate.createChild(am4core.Circle);\n    circle.radius = 2;\n    circle.fill = am4core.color(\"#4f5d75\");\n    circle.stroke = am4core.color(\"#4f5d75\");\n    circle.strokeWidth = 1;\n    circle.nonScaling = true;\n\n    // Set property fields\n    imageSeriesTemplate.propertyFields.latitude = \"lat\";\n    imageSeriesTemplate.propertyFields.longitude = \"long\";\n\n    // Add data for the three cities\n    imageSeries.data = [];\n\n    chart.current = map;\n    series.current = imageSeries;\n\n    return () => {\n      map.dispose();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (series && series.current) {\n      series.current.data = props.locations;\n    }\n  }, [props.locations]);\n\n  return <div id=\"posts-map\" className=\"posts-map\"></div>;\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport \"./stats.css\";\nimport Loader from \"react-loader-spinner\";\nimport { getUserStats } from \"../../api/user\";\nimport { getLocations } from \"../../api/location\";\nimport Map from \"../../components/map\";\n\nconst Stats = (props) => {\n  const [stats, setStats] = useState({});\n  const [locations, setLocations] = useState([]);\n  const [dataAvailable, setDataAvailable] = useState(false);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const promiseArray = [getUserStats(), getLocations()];\n        const data = await Promise.all(promiseArray);\n\n        // go over all requests\n        data.forEach((response) => {\n          if (response && response.data) {\n            if (Array.isArray(response.data)) {\n              // locations\n              setLocations(response.data);\n            } else {\n              setStats(response.data);\n            }\n          }\n          // Let UI know that the users are available\n          setDataAvailable(true);\n        });\n      } catch (error) {\n        console.error(\"Failed to get user stats\");\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <div className=\"stats\">\n      <h1>Forum stats:</h1>\n      <div className=\"container\">\n        {\n          // Show loader until we load the user list\n          dataAvailable ? (\n            <div className=\"data\">\n              <ul>\n                <li>Users: {stats.userCount}</li>\n                <li>Threads: {stats.threadCount}</li>\n                <li>Posts: {stats.postCount}</li>\n              </ul>\n              <Map locations={locations} />\n            </div>\n          ) : (\n            <Loader\n              type=\"Puff\"\n              color=\"#4f5d75\"\n              height={100}\n              width={100}\n              className=\"loader\"\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Stats;\n","import axios from \"axios\";\nimport env from \"../config/env\";\n\n// Api call to get all users from the database\n// mostly used for debugging and admin purposes\n// Get env api -> production: deployed database\n// development -> localhost database\nexport const getUserStats = () => {\n  return axios.get(env[process.env.NODE_ENV].api + \"/accounts/stats\");\n};\n\nexport const signInUser = (payload) => {\n  return axios.post(\n    env[process.env.NODE_ENV].api + \"/accounts/signin\",\n    payload\n  );\n};\n\nexport const signUpUser = (payload) => {\n  return axios.post(\n    env[process.env.NODE_ENV].api + \"/accounts/signup\",\n    payload\n  );\n};\n","import axios from \"axios\";\nimport env from \"../config/env\";\n\nexport const getLocations = () => {\n  return axios.get(env[process.env.NODE_ENV].api + \"/location/all\");\n};\n","import * as moment from \"moment\";\nvar Color = require(\"color\");\n\nexport const convertDateToFromNow = (date) => {\n  return moment(date).fromNow();\n};\n\nexport const convertDate = (date) => {\n  return moment(date).format(\"MMMM Do YYYY, h:mm:ss a\");\n};\n\nexport const getRandomBackgroundColor = (str) => {\n  var saturation = 0;\n  var hash = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    const _charCode = str.charCodeAt(i);\n    saturation = (saturation + _charCode) % 100;\n    hash = _charCode + ((hash << 5) - hash);\n  }\n\n  var light = (saturation * saturation) % 100;\n\n  var hue = hash % 360;\n\n  const color = Color(\"hsl(\" + hue + \", \" + saturation + \"%, \" + light + \"%)\");\n\n  const style = {\n    backgroundColor: color.rgb(),\n    color: color.isDark() ? \"white\" : \"black\"\n  };\n  return style;\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./thread.css\";\nimport { Link } from \"react-router-dom\";\nimport { convertDateToFromNow } from \"../../service/helper\";\n\nconst Thread = (props) => {\n  const [date, setDate] = useState(\"\");\n\n  const initialSetup = () => {\n    setDate(convertDateToFromNow(props.thread.created));\n  };\n\n  useEffect(initialSetup, []);\n\n  const htmlContent = (\n    <div className=\"container\">\n      <div className=\"content\">\n        <div className=\"subject\">\n          <h2>{props.thread.subject}</h2>\n        </div>\n        <div className=\"date\">\n          Created by {props.thread.user.name} {date}\n        </div>\n        <div className=\"tags\">\n          Tags:{\" \"}\n          {props.thread.tags &&\n            props.thread.tags.length &&\n            Array.isArray(props.thread.tags)\n            ? props.thread.tags.map((tag, index) => (\n              <span key={index}>{tag}</span>\n            ))\n            : \"\"}\n        </div>\n      </div>\n      <div className=\"comments vertical-centering\">\n        <p>{props.thread.count - 1} comments</p>\n      </div>\n    </div>\n  );\n\n  if (props.clickable) {\n    return (\n      <Link\n        className=\"thread\"\n        to={{\n          pathname: \"/thread/\" + props.thread.id,\n          state: { threadId: props.thread.id },\n        }}\n      >\n        {htmlContent}\n      </Link>\n    );\n  } else {\n    return <div className=\"thread\">{htmlContent}</div>;\n  }\n};\n\nexport default Thread;\n","import React from \"react\";\nimport Thread from \"../thread\";\n\nfunction ThreadList(props) {\n  const threads = props.threads;\n  const listItems = threads.map((thread) => (\n    <Thread clickable={true} key={thread.id} thread={thread} />\n  ));\n  return <React.Fragment>{listItems}</React.Fragment>;\n}\n\nexport default ThreadList;\n","import React from \"react\";\n\nfunction PageHead(props) {\n  return (\n    <div className=\"page-head\">\n      <h1>{props.title}</h1>\n    </div>\n  );\n}\n\nexport default PageHead;\n","import React, { useEffect, useRef } from \"react\";\nimport \"./search-bar.css\";\n\nconst SearchBar = (props) => {\n  const inputRef = useRef();\n  const SearchButtonRef = useRef();\n\n  const triggerEvent = (event) => {\n    // Number 13 is the \"Enter\" key on the keyboard\n    if (event.keyCode === 13) {\n      // Cancel the default action, if needed\n      event.preventDefault();\n      // Trigger the button element with a click\n      SearchButtonRef.current.click();\n    }\n  };\n\n  const initialSetup = () => {\n    if (inputRef.current) {\n      // Execute a function when the user releases a key on the keyboard\n      inputRef.current.addEventListener(\"keyup\", triggerEvent);\n      // Remove on destroy\n      return () => {\n        inputRef.current.removeEventListener(\"keyup\", triggerEvent);\n      };\n    }\n  };\n\n  useEffect(initialSetup, []);\n\n  return (\n    <div className=\"search-bar\">\n      <input\n        ref={inputRef}\n        id=\"search\"\n        alt=\"search\"\n        name=\"search\"\n        placeholder=\"Search for thread\"\n        aria-label=\"Search for thread\"\n        type=\"text\"\n        value={props.value}\n        onChange={(event) => props.onSearch(event.target.value)}\n      ></input>\n      <button\n        ref={SearchButtonRef}\n        aria-label=\"Search in Threads\"\n        onClick={props.search}\n      >\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState } from \"react\";\nimport \"./feed.css\";\nimport { getAllThreads, searchAllThreads } from \"../../api/thread\";\nimport ThreadList from \"../../components/thread-list\";\nimport Loader from \"react-loader-spinner\";\nimport PageHead from \"../../components/page-head\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../../components/search-bar\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Feed = (props) => {\n  const [threads, setThreads] = useState([]);\n  const [searchThreads, setSearchThreads] = useState([]);\n  const [visibleThreads, setVisibleThreads] = useState([]);\n\n  const [dataAvailable, setDataAvailable] = useState(false);\n  const [searchDone, setSearchDone] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const PER_PAGE = 10;\n  const offset = currentPage * PER_PAGE;\n\n  const triggerSearch = () => {\n    if (searchTerm !== \"\") {\n      onSearch(searchTerm);\n    } else {\n      setSearchThreads(threads);\n    }\n  };\n\n  useEffect(() => {\n    if (searchThreads.length > 0) {\n      // search list\n      const currentPageData = searchThreads.slice(offset, offset + PER_PAGE);\n      setVisibleThreads(currentPageData);\n    } else {\n      const currentPageData = threads.slice(offset, offset + PER_PAGE);\n      setVisibleThreads(currentPageData);\n    }\n  }, [threads, searchThreads, offset]);\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  useEffect(() => {\n    getAllThreads()\n      .then((response) => {\n        // Insert users\n        setThreads(response.data);\n\n        // Let UI know that the users are available\n        setDataAvailable(true);\n      })\n      .catch((err) => {\n        // TODO: Show error message\n        console.error(\"Failed to get all threads\", err);\n      });\n  }, []);\n\n  const onSearch = (term) => {\n    setDataAvailable(false);\n    searchAllThreads(term)\n      .then((response) => {\n        // Insert users\n        setSearchThreads(response.data);\n\n        // Let UI know that the users are available\n        setDataAvailable(true);\n        setSearchDone(true);\n\n        // update the pagination\n      })\n      .catch((err) => {\n        // TODO: Show error message\n        console.error(\"Failed to get all threads\", err);\n      });\n  };\n\n  const resetSearch = () => {\n    setSearchTerm(\"\");\n    setSearchThreads([]);\n    setSearchDone(false);\n  };\n\n  return (\n    <div className=\"feed\">\n      <PageHead className=\"title\" title=\"Home\" />\n\n      <div className=\"container\">\n        {\n          // Show loader until we load the user list\n          dataAvailable ? (\n            <React.Fragment>\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(\n                  (searchThreads.length > 0\n                    ? searchThreads.length\n                    : threads.length) / PER_PAGE\n                )}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n              <ThreadList threads={visibleThreads} />\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(\n                  (searchThreads.length > 0\n                    ? searchThreads.length\n                    : threads.length) / PER_PAGE\n                )}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n            </React.Fragment>\n          ) : (\n              <Loader\n                type=\"Puff\"\n                color=\"#4f5d75\"\n                height={100}\n                width={100}\n                className=\"loader\"\n              />\n            )\n        }\n      </div>\n\n      <div className=\"aside\">\n        <Link to=\"/thread/new_thread\">\n          <div className=\"create-new-thread\">Create new thread</div>\n        </Link>\n        <SearchBar\n          value={searchTerm}\n          search={triggerSearch}\n          onSearch={setSearchTerm}\n        />\n        {searchDone ? (\n          <button onClick={resetSearch} className=\"search-info\">\n            {searchThreads.length > 0 ? \"Reset search\" : \"No threads found\"}\n          </button>\n        ) : (\n            \"\"\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default Feed;\n","import axios from \"axios\";\nimport env from \"../config/env\";\nimport { currentUser } from \"../service/user.service\";\n\nexport const getAllThreads = () => {\n  return axios.get(env[process.env.NODE_ENV].api + \"/thread/all\");\n};\n\nexport const searchAllThreads = (searchTerm) => {\n  return axios.get(\n    env[process.env.NODE_ENV].api + \"/thread/search?searchTerm=\" + searchTerm\n  );\n};\n\nexport const getThread = (id) => {\n  return axios.get(env[process.env.NODE_ENV].api + \"/thread/one?id=\" + id);\n};\n\nexport const addThread = (payload) => {\n  payload.userId = currentUser.id;\n  return axios.post(env[process.env.NODE_ENV].api + \"/thread/add\", payload);\n};\n\nexport const addPost = (payload) => {\n  payload.userId = currentUser.id;\n  return axios.post(\n    env[process.env.NODE_ENV].api + \"/thread/add-post\",\n    payload\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./post.css\";\nimport {\n  convertDate,\n  getRandomBackgroundColor,\n  convertDateToFromNow,\n} from \"../../service/helper\";\n\nconst Post = (props) => {\n  const [date, setDate] = useState(\"\");\n  const [dateUser, setDateUser] = useState(\"\");\n  const [color, setColor] = useState({});\n\n  const initialSetup = () => {\n    setDate(convertDate(props.post.created));\n    setColor(\n      getRandomBackgroundColor(\n        props.post.user[0] ? props.post.user[0].name : \"unknown\"\n      )\n    );\n    setDateUser(\n      props.post.user[0]\n        ? convertDateToFromNow(props.post.user[0].created)\n        : \"unknown\"\n    );\n  };\n\n  useEffect(initialSetup, []);\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"header\">{date}</div>\n      <div className=\"content\">\n        <div className=\"left\">\n          <div className=\"icon\" style={color}>\n            {(props.post.user[0]\n              ? props.post.user[0].name\n              : \"unknown\"\n            ).substring(0, 2)}\n          </div>\n          <p>{props.post.user[0] ? props.post.user[0].name : \"unknown\"}</p>\n          <p className=\"date\">Joined: {dateUser}</p>\n        </div>\n        <div className=\"right\">{props.post.content}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"../post\";\n\nfunction PostList(props) {\n  const posts = props.posts;\n  const listItems = posts.map((post, index) => (\n    <Post key={index} post={post} />\n  ));\n  return <div className=\"post-list\">{listItems}</div>;\n}\n\nexport default PostList;\n","import React, { useState, useEffect } from \"react\";\nimport { addPost } from \"../../api/thread\";\nimport { currentUser } from \"../../service/user.service\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport \"./new-post.css\";\n\nconst NewPost = (props) => {\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(undefined);\n  const [threadId, setThreadId] = useState(undefined);\n  const [location, setLocation] = useState(undefined);\n  const [needToLogin, setNeedToLogin] = useState(false);\n\n  const initialSetup = () => {\n    setThreadId(props.threadId);\n    if (!currentUser.id) {\n      setNeedToLogin(true);\n    }\n  };\n\n  useEffect(initialSetup, []);\n\n  const handleClick = () => {\n    var payload = {\n      threadId: threadId,\n      message: message,\n      location: JSON.stringify(location),\n    };\n\n    addPost(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          // link to thread page\n          const data = response.data;\n          // convert to post object\n          const post = {\n            active: data.active,\n            content: data.content,\n            created: data.created,\n            user: [\n              {\n                name: currentUser.name,\n                id: currentUser.id,\n              },\n            ],\n          };\n          props.success(post);\n\n          // clear data\n          setMessage(\"\");\n          setLocation(undefined);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const askLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLocation({\n          lat: position.coords.latitude,\n          long: position.coords.longitude,\n        });\n      });\n    } else {\n      setError(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  if (needToLogin) {\n    return (\n      <div id={props.id} className=\"new-post\">\n        Please sign-in/sign-up to add a post.\n        <Link\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        >\n          <p className=\"button\">Go to sign-in/sign-up</p>\n        </Link>\n      </div>\n    );\n  } else {\n    return (\n      <div id={props.id} className=\"new-post\">\n        <h1>Add post:</h1>\n\n        <textarea\n          id=\"message\"\n          alt=\"message\"\n          name=\"message\"\n          aria-label=\"New post message\"\n          onChange={(event) => setMessage(event.target.value)}\n        ></textarea>\n        <div className=\"location\">\n          <label htmlFor=\"location\">Share location: </label>\n          <input aria-label=\"Enable share location\"  onChange={askLocation} type=\"checkbox\"></input>\n        </div>\n        <button aria-label=\"Add post to thread\" onClick={handleClick}>\n          Submit\n        </button>\n        <div>{error ? error : \"\"}</div>\n      </div>\n    );\n  }\n};\n\nexport default withRouter(NewPost);\n","import React, { useState, useEffect } from \"react\";\nimport \"./thread.css\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { getThread } from \"../../api/thread\";\nimport Loader from \"react-loader-spinner\";\nimport PostList from \"../../components/post-list\";\nimport NewPost from \"../../components/new-post\";\nimport Thread from \"../../components/thread\";\nimport ReactPaginate from \"react-paginate\";\n\nconst ThreadPage = (props) => {\n  // declare states\n  const [id, setId] = useState(undefined);\n  const [redirectToHome, setRedirectToHome] = useState(false);\n  const [threadLoaded, setThreadLoaded] = useState(false);\n  const [thread, setThread] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [visiblePosts, setVisiblePosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const PER_PAGE = 10;\n  const offset = currentPage * PER_PAGE;\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  // Get thread here\n  const initialSetup = () => {\n    if (\n      props.location &&\n      props.location.state &&\n      props.location.state.threadId\n    ) {\n      setId(props.location.state.threadId);\n    } else if (props.match && props.match.params && props.match.params.thread) {\n      setId(props.match.params.thread);\n    } else {\n      setRedirectToHome(true);\n    }\n  };\n\n  useEffect(initialSetup, []);\n\n  useEffect(() => {\n    const currentPageData = posts.slice(offset, offset + PER_PAGE);\n    setVisiblePosts(currentPageData);\n  }, [currentPage, offset, posts]);\n\n  useEffect(() => {\n    const getPosts = () => {\n      getThread(id)\n        .then((response) => {\n          if (response.status === 200) {\n            if (\n              response.data &&\n              response.data.length &&\n              response.data.length > 0\n            ) {\n              const temp = response.data[0];\n              temp.post = response.data[0].posts[0];\n              temp.count = response.data[0].posts.length;\n\n              setThread(temp);\n              setPosts(response.data[0].posts);\n              setThreadLoaded(true);\n            }\n          } else if (response.status === 202) {\n            console.error(\"error\", response.data);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    };\n    if (id) {\n      getPosts();\n    }\n  }, [id]);\n\n  const addPostToList = (post) => {\n    setPosts(() => [...posts, post]);\n  };\n\n  const scrollToNewPost = () => {\n    const newPost = document.getElementById(\"new-post\");\n    newPost.scrollIntoView(true);\n  };\n\n  if (redirectToHome === true) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"thread\">\n      {\n        // Show loader until we load the user list\n        threadLoaded ? (\n          // posts here\n          <div>\n            <Thread clickable={false} thread={thread} />\n\n            <div className=\"content\">\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(posts.length / PER_PAGE)}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n              <PostList posts={visiblePosts} />\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(posts.length / PER_PAGE)}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n              <div className=\"aside\">\n                <button className=\"create-new-post\" onClick={scrollToNewPost}>\n                  Create new post\n                </button>\n              </div>\n            </div>\n\n            <br />\n            <NewPost\n              id=\"new-post\"\n              success={addPostToList}\n              threadId={thread.id}\n            />\n          </div>\n        ) : (\n          <Loader\n            type=\"Puff\"\n            color=\"#4f5d75;\"\n            height={100}\n            width={100}\n            className=\"loader\"\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default withRouter(ThreadPage);\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h3>Url not found.</h3>;\n};\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport \"./new-thread.css\";\nimport { addThread } from \"../../api/thread\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport TagsInput from \"react-tagsinput\";\n\nconst NewThread = (props) => {\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [threadId, setThreadId] = useState(undefined);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleClick = () => {\n    if (subject === \"\" || message === \"\") {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    var payload = {\n      subject: subject,\n      message: message,\n      tags: JSON.stringify(tags),\n    };\n\n    addThread(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          // link to thread page\n          setThreadId(response.data.id);\n          setRedirect(true);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (redirect === true) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/thread/\" + threadId,\n          state: { threadId: threadId },\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"new-thread\">\n      <h1>Add a thread</h1>\n\n      <div>\n        <label htmlFor=\"subject\">Subject: </label>\n        <input\n          id=\"subject\"\n          alt=\"subject\"\n          name=\"subject\"\n          placeholder=\"Enter thread subject\"\n          type=\"text\"\n          onChange={(event) => setSubject(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"message\">Message: </label>\n        <textarea\n          id=\"message\"\n          alt=\"message\"\n          name=\"message\"\n          onChange={(event) => setMessage(event.target.value)}\n        ></textarea>\n      </div>\n      <div>\n        <label htmlFor=\"tags\">Tags: </label>\n        <TagsInput inputProps={\n          {\n            \"aria-label\": \"Add a tag to the new thread\"\n          }\n        } id=\"tags\" value={tags} onChange={setTags} />\n      </div>\n\n      <button aria-label=\"Create a new thread\" onClick={handleClick}>\n        Submit\n      </button>\n\n      <div className=\"error\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default withRouter(NewThread);\n","import React, { useState } from \"react\";\nimport { signInUser } from \"../../api/user\";\nimport sha256 from \"crypto-js/sha256\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(undefined);\n\n  const handlePassword = (pass) => setPassword(sha256(pass).toString());\n\n  const handleClick = () => {\n    if (username === \"\" || password === \"\") {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    var payload = {\n      email: username,\n      password: password,\n    };\n\n    signInUser(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          props.success(response.data);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div onClick={props.changeMode} className=\"top-right-corner\">\n        Sign-up\n      </div>\n      <h2>Sign-in</h2>\n\n      <div>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          id=\"email\"\n          alt=\"email\"\n          autoFocus\n          name=\"username\"\n          placeholder=\"Enter your Email\"\n          type=\"text\"\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          id=\"password\"\n          alt=\"password\"\n          name=\"password\"\n          placeholder=\"Enter your Password\"\n          type=\"password\"\n          onChange={(event) => handlePassword(event.target.value)}\n        ></input>\n      </div>\n\n      <button aria-label=\"Sign into forum\" onClick={handleClick}>\n        Sign-in\n      </button>\n\n      <div className=\"error\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { signUpUser } from \"../../api/user\";\nimport sha256 from \"crypto-js/sha256\";\n\nconst Register = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(undefined);\n\n  const handleClick = () => {\n    if (username === \"\" || password === \"\" || email === \"\") {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    // TODO: validate values\n    var payload = {\n      name: username,\n      email: email,\n      hashed_password: password,\n    };\n\n    signUpUser(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          props.success(response.data);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handlePassword = (pass) => setPassword(sha256(pass).toString());\n\n  return (\n    <div className=\"container\">\n      <div onClick={props.changeMode} className=\"top-right-corner\">\n        Sign-in\n      </div>\n      <h2>Sign-up</h2>\n\n      <div>\n        <label htmlFor=\"name\">Username: </label>\n        <input\n          id=\"name\"\n          alt=\"name\"\n          autoFocus\n          name=\"name\"\n          placeholder=\"Enter your username\"\n          type=\"text\"\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          id=\"email\"\n          alt=\"email\"\n          name=\"username\"\n          placeholder=\"Enter your Email\"\n          type=\"text\"\n          onChange={(event) => setEmail(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          id=\"password\"\n          alt=\"password\"\n          name=\"password\"\n          placeholder=\"Enter your Password\"\n          type=\"password\"\n          onChange={(event) => handlePassword(event.target.value)}\n        ></input>\n      </div>\n\n      <button aria-label=\"Sign up to forum\" onClick={handleClick}>\n        Sign-up\n      </button>\n\n      <div className=\"error\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport \"./authenticate.css\";\nimport { addUser } from \"../../service/user.service\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport SignIn from \"../../components/sign-in\";\nimport SignUp from \"../../components/sign-up\";\n\nconst Authenticate = (props) => {\n  const [login, setLogin] = useState(true);\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n  const loginSuccess = (data) => {\n    addUser(data);\n    setRedirectToReferrer(true);\n  };\n\n  const changeLoginMode = () => {\n    setLogin(!login);\n  };\n\n  if (redirectToReferrer === true) {\n    return <Redirect to={from} />;\n  }\n\n  return (\n    <div className=\"auth-container\">\n      {login ? (\n        <SignIn changeMode={changeLoginMode} success={loginSuccess} />\n      ) : (\n        <SignUp changeMode={changeLoginMode} success={loginSuccess} />\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(Authenticate);\n","import React from \"react\";\nimport \"./header.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { currentUser, signOut } from \"../../service/user.service\";\n\n// Change the page in router to the correct querystring\n// uses react-router linking\n// we can restyle this to be in a nav bar\n\nconst Header = (props) => {\n  return (\n    <header role=\"banner\" className=\"active\" id=\"scroll-header\">\n      <nav role=\"navigation\" className=\"menu\">\n        <Link aria-label=\"Navigate to Home page\" to=\"/\">Home</Link>\n        <Link aria-label=\"Navigate to new thread page\" to=\"/thread/new_thread\">New thread</Link>\n        <Link aria-label=\"Navigate to statistics page\" to=\"/stats\">Stats</Link>\n      </nav>\n      <div className=\"login\">\n        {currentUser.id ? (\n          <div>\n            <div className=\"user\">Hello {currentUser.name}</div>\n            <button onClick={signOut}> Logout </button>\n          </div>\n        ) : (\n            <Link\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location },\n              }}\n            >\n              Sign-In/Sign-up\n            </Link>\n          )}\n      </div>\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React, { useEffect, useState } from \"react\";\nimport \"./footer.css\";\n\nconst Footer = () => {\n  const [windowHeight, setWindowHeight] = useState(0);\n  const [forumHeight, setForumHeight] = useState(0);\n  const [className, setClassName] = useState(\"\");\n\n  const attachResizeObserver = () => {\n    // Set initial window height\n    setWindowHeight(window.innerHeight);\n\n    // Keep track of the window changes\n    window.addEventListener(\"resize\", (event) => {\n      setWindowHeight(event.target.innerHeight);\n    });\n\n    // Add observer for the forum body\n    var observer = new ResizeObserver((entries) => {\n      for (let entry of entries) {\n        const cr = entry.contentRect;\n        setForumHeight(cr.height + cr.top);\n      }\n    });\n\n    // // Observe one or multiple elements\n    const forumBody = document.getElementById(\"forum-body\");\n    observer.observe(forumBody);\n  };\n\n  useEffect(attachResizeObserver, []);\n  useEffect(() => {\n    if (windowHeight > forumHeight) {\n      setClassName(\"bottom\");\n    } else {\n      setClassName(\"\");\n    }\n  }, [windowHeight, forumHeight]);\n\n  return (\n    <footer role=\"contentinfo\" className={className}>\n      <div className=\"copyright\">\n        Copyright © 2020, David Pan and Emile Ferrand\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Switch, Route, HashRouter as Router } from \"react-router-dom\";\n// Route\nimport AuthenticatedRoute from \"./components/authenticated-route\";\n\n// Pages\nimport Stats from \"./views/stats\";\nimport Feed from \"./views/feed\";\nimport Thread from \"./views/thread\";\nimport NotFound from \"./views/not-found\";\nimport NewThread from \"./views/new-thread\";\nimport Authenticate from \"./views/authenticate\";\n\n// Components\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\n\n// Services\nimport { getUser } from \"./service/user.service\";\n\n// Load cached user\ngetUser();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Header />\n      <div role=\"main\" id=\"forum-body\" className=\"forum-body\">\n        <Switch>\n          <Route exact path=\"/\" component={Feed} />\n          <Route path=\"/stats\" component={Stats} />\n          <AuthenticatedRoute path=\"/thread/new_thread\" component={NewThread} />\n          <Route path=\"/thread/:thread\" component={Thread} />\n          <Route path=\"/login\" component={Authenticate} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </div>\n      <Footer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}